
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author ING-JUANMATA
 */
public class Programa extends javax.swing.JFrame {

    private Matriz datos;

    /**
     * Creates new form Programa
     */
    public Programa() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pnlDatos = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtFilas = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtColumnas = new javax.swing.JTextField();
        txtValor = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnSumFil = new javax.swing.JButton();
        btnSunMat = new javax.swing.JButton();
        btnSumCol = new javax.swing.JButton();
        btnCrear = new javax.swing.JButton();
        txtResultado = new javax.swing.JTextField();
        txtDestino = new javax.swing.JTextField();
        txtOrigen = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btnInversa = new javax.swing.JButton();
        btnInsertar = new javax.swing.JButton();
        btnCopCol = new javax.swing.JButton();
        btnCopFil = new javax.swing.JButton();
        btnMovFil = new javax.swing.JButton();
        btnMovCol = new javax.swing.JButton();
        pnlPrincipal = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtMatrices = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlDatos.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Fila:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(jLabel1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(txtFilas, gridBagConstraints);

        jLabel2.setText("Columna:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(jLabel2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(txtColumnas, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(txtValor, gridBagConstraints);

        jLabel3.setText("Valor:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(jLabel3, gridBagConstraints);

        jLabel5.setText("Destino");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(jLabel5, gridBagConstraints);

        jLabel4.setText("Origen");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(jLabel4, gridBagConstraints);

        btnSumFil.setText("Sumar Fila");
        btnSumFil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSumFilActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(btnSumFil, gridBagConstraints);

        btnSunMat.setText("Sumar Matriz");
        btnSunMat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSunMatActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(btnSunMat, gridBagConstraints);

        btnSumCol.setText("Sumar Columna");
        btnSumCol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSumColActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(btnSumCol, gridBagConstraints);

        btnCrear.setText("Crear Matriz");
        btnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(btnCrear, gridBagConstraints);

        txtResultado.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(txtResultado, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(txtDestino, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(txtOrigen, gridBagConstraints);

        jLabel6.setText("Resultado");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(jLabel6, gridBagConstraints);

        btnInversa.setText("Inversa");
        btnInversa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInversaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(btnInversa, gridBagConstraints);

        btnInsertar.setText("Insertar");
        btnInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(btnInsertar, gridBagConstraints);

        btnCopCol.setText("Copiar Columna");
        btnCopCol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCopColActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(btnCopCol, gridBagConstraints);

        btnCopFil.setText("Copiar Fila");
        btnCopFil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCopFilActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(btnCopFil, gridBagConstraints);

        btnMovFil.setText("Mover Fila");
        btnMovFil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMovFilActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(btnMovFil, gridBagConstraints);

        btnMovCol.setText("Mover Columna");
        btnMovCol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMovColActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(btnMovCol, gridBagConstraints);

        getContentPane().add(pnlDatos, java.awt.BorderLayout.LINE_START);

        pnlPrincipal.setLayout(new java.awt.BorderLayout());

        txtMatrices.setEditable(false);
        txtMatrices.setColumns(20);
        txtMatrices.setRows(5);
        jScrollPane1.setViewportView(txtMatrices);

        pnlPrincipal.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(pnlPrincipal, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void iniciarMatriz() {
        String matriz = "";
        int tam = datos.getDatos().length;
        for (int i = 0; i < tam; i++) {
            for (int j = 0; j < tam; j++) {
                datos.insertarValor(0, i, j);
                matriz += j == tam - 1 ? "0\n" : "0, ";
            }
        }

        txtMatrices.setText(matriz);
    }

    private void mostrarMatriz(int[][] data) {
        String matriz = "";
        int tam = datos.getDatos().length;
        for (int i = 0; i < tam; i++) {
            for (int j = 0; j < tam; j++) {
                matriz += j == tam - 1 ? data[i][j] + "\n" : data[i][j] + ", ";
            }
        }

        txtMatrices.setText(matriz);
    }

    private void limpiarCampos() {
        txtFilas.setText("");
        txtColumnas.setText("");
        txtDestino.setText("");
        txtOrigen.setText("");
        txtResultado.setText("");
        txtValor.setText("");
    }

    private void btnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearActionPerformed
        int tam = Integer.parseInt(txtFilas.getText());
        datos = new Matriz(tam);
        iniciarMatriz();
        limpiarCampos();
    }//GEN-LAST:event_btnCrearActionPerformed

    private void btnSunMatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSunMatActionPerformed
        txtResultado.setText(datos.sumarValores() + "");
    }//GEN-LAST:event_btnSunMatActionPerformed

    private void btnInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertarActionPerformed
        int fila = Integer.parseInt(txtFilas.getText());
        int columna = Integer.parseInt(txtColumnas.getText());
        int valor = Integer.parseInt(txtValor.getText());

        if (!datos.insertarValor(valor, fila, columna)) {
            JOptionPane.showMessageDialog(this, "Error en la insercion", "ERROR", JOptionPane.ERROR_MESSAGE);
        } else {
            mostrarMatriz(datos.getDatos());
            limpiarCampos();
        }
    }//GEN-LAST:event_btnInsertarActionPerformed

    private void btnSumFilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSumFilActionPerformed
        int fila = Integer.parseInt(txtFilas.getText());
        int res = datos.sumarValoresRenglon(fila);

        txtResultado.setText(res + "");
    }//GEN-LAST:event_btnSumFilActionPerformed

    private void btnSumColActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSumColActionPerformed
        int columna = Integer.parseInt(txtColumnas.getText());
        int res = datos.sumarValoresColumna(columna);

        txtResultado.setText(res + "");
    }//GEN-LAST:event_btnSumColActionPerformed

    private void btnInversaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInversaActionPerformed
        mostrarMatriz(datos.inversa());
    }//GEN-LAST:event_btnInversaActionPerformed

    private void btnCopColActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCopColActionPerformed
        int origen = Integer.parseInt(txtOrigen.getText());
        int destino = Integer.parseInt(txtDestino.getText());

        datos.copiarColuma(origen, destino);
        mostrarMatriz(datos.getDatos());
        limpiarCampos();
    }//GEN-LAST:event_btnCopColActionPerformed

    private void btnCopFilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCopFilActionPerformed
        int origen = Integer.parseInt(txtOrigen.getText());
        int destino = Integer.parseInt(txtDestino.getText());

        datos.copiarRenglon(origen, destino);
        mostrarMatriz(datos.getDatos());
        limpiarCampos();
    }//GEN-LAST:event_btnCopFilActionPerformed

    private void btnMovFilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMovFilActionPerformed
        int origen = Integer.parseInt(txtOrigen.getText());
        int destino = Integer.parseInt(txtDestino.getText());

        datos.intercambioRenglones(origen, destino);
        mostrarMatriz(datos.getDatos());
        limpiarCampos();
    }//GEN-LAST:event_btnMovFilActionPerformed

    private void btnMovColActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMovColActionPerformed
        int origen = Integer.parseInt(txtOrigen.getText());
        int destino = Integer.parseInt(txtDestino.getText());

        datos.intercambioColumnas(origen, destino);
        mostrarMatriz(datos.getDatos());
        limpiarCampos();
    }//GEN-LAST:event_btnMovColActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Programa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Programa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Programa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Programa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Programa().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCopCol;
    private javax.swing.JButton btnCopFil;
    private javax.swing.JButton btnCrear;
    private javax.swing.JButton btnInsertar;
    private javax.swing.JButton btnInversa;
    private javax.swing.JButton btnMovCol;
    private javax.swing.JButton btnMovFil;
    private javax.swing.JButton btnSumCol;
    private javax.swing.JButton btnSumFil;
    private javax.swing.JButton btnSunMat;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnlDatos;
    private javax.swing.JPanel pnlPrincipal;
    private javax.swing.JTextField txtColumnas;
    private javax.swing.JTextField txtDestino;
    private javax.swing.JTextField txtFilas;
    private javax.swing.JTextArea txtMatrices;
    private javax.swing.JTextField txtOrigen;
    private javax.swing.JTextField txtResultado;
    private javax.swing.JTextField txtValor;
    // End of variables declaration//GEN-END:variables
}
